"""
插入排序
原理： 在未排序的区间内选择一个基准元素，
将该元素与其左侧已排序的区间元素逐一比较大小，
并将该元素插入到正确的位置
特点：
    在数据量小的情况下，插入排序通常更快
插入排序的使用频率显著高于冒泡排序和选择排序的原因：
    冒泡排序排序基于交换，需借助一个临时变量，每次操作需要3个单元操作
    插入排序基于赋值，只需要一个单元操作
    选择排序在任何情况下的复杂度都为O(n2)。如果给定一组部分有序的数据，插入排序通常效率更高
    选择排序不稳定，无法应用于多级排序
"""

def insertion_sort(arr):
    # 外循环： 已排序区间为[0, i - 1]
    for i in range(1, len(arr)):
        base = arr[i]
        j = i - 1
        while base < arr[j] and j >= 0:
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = base


if __name__ == '__main__':
    arr = [9, 4, 6, 3, 8, 2, 0, 0, 7]
    insertion_sort(arr)
    print(arr)